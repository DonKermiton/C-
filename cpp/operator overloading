#include<iostream>
#include<string>
using namespace std;

 class Wektor {
    double a, b, c;
    
    public:
    Wektor(double a, double b, double c){
        this->a = a;
        this->b = b;
        this->c = c;
        }
        
   Wektor operator *(float liczba){
    return Wektor(this->a * liczba, this->b * liczba, this->c * liczba);
};

    Wektor operator /(const Wektor & v2){
        return Wektor(this->a/v2.a, this->b/v2.b, this->c/v2.c);
        };
        friend Wektor operator+(const Wektor&, const Wektor&);
        friend ostream& operator<<(ostream&, const Wektor&);
        friend Wektor operator-(const Wektor&, const Wektor&);
        friend Wektor operator*(const Wektor&, const Wektor&);
 };
 
 Wektor operator+(const Wektor & v1, const Wektor & v2) {
     return Wektor(v1.a+v2.a, v1.b+v2.b, v1.c+v2.c);
       };

Wektor operator-(const Wektor & v1, const Wektor & v2){
    return Wektor(v1.a-v2.a, v1.b-v2.b, v1.c-v2.c);
    };

//skalarne
Wektor operator*(const Wektor & v1, const Wektor & v2){
    return Wektor(v1.a*v2.a, v1.b*v2.b, v1.c*v2.c);
    };
    
ostream& operator<<(ostream& str, const Wektor& v) {
     return str << "[" << v.a << "," << v.b
      << ","  << v.c << "]";
      };
       
int main() { 
     Wektor v1(2,5,1), v2(2,2,2);
   
   Wektor v = v1 + v2;
   Wektor v6 = v1 / v2;
   Wektor v3 = v2 - v1;
   Wektor v4 = v1 * v2;
   Wektor v5 = v1 * 2;
    cout << "Wynik dodawania" << v << endl<< v3 << endl;
    cout << "Wynik odejmowania" << v3 << endl;
    cout << "Wynik dzielenia" << v6 << endl;
    cout << "Wynik mnozenia skalarnego" << v4 << endl;
    cout << "Wynik mnozenia przez liczbe" << v5;
      }
